{"ast":null,"code":"// Initialize Firebase\nvar firebase = require(\"firebase/app\"); // require(\"firebase/analytics\");\n\n\nrequire(\"firebase/auth\");\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/functions\");\n\nrequire(\"firebase/storage\");\n\nvar db = function db(url) {\n  if (url == \"us-central1-follow-up-edge-backend.cloudfunctions.net\") {\n    try {\n      var config = {\n        apiKey: process.env.FIREBASE_API_KEY_FUE,\n        authDomain: process.env.FIREBASE_AUTH_DOMAIN_FUE,\n        databaseURL: process.env.FIREBASE_DATABASE_URL_FUE,\n        projectId: process.env.FIREBASE_PROJECT_ID_FUE,\n        storageBucket: process.env.FIREBASE_STORAGE_BUCKET_FUE,\n        messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID_FUE,\n        appId: process.env.FIREBASE_APP_ID_FUE,\n        measurementId: process.env.FIREBASE_MEASUREMENT_ID_FUE\n      };\n      firebase.initializeApp(config);\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack);\n      }\n    }\n\n    return firebase;\n  } else if (url == \"us-central1-wl-test-1.cloudfunctions.net\") {\n    try {\n      var _config = {\n        apiKey: process.env.FIREBASE_API_KEY_1,\n        authDomain: process.env.FIREBASE_AUTH_DOMAIN_1,\n        databaseURL: process.env.FIREBASE_DATABASE_URL_1,\n        projectId: process.env.FIREBASE_PROJECT_ID_1,\n        storageBucket: process.env.FIREBASE_STORAGE_BUCKET_1,\n        messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID_1,\n        appId: process.env.FIREBASE_APP_ID_1,\n        measurementId: process.env.FIREBASE_MEASUREMENT_ID_1\n      };\n      firebase.initializeApp(_config);\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack);\n      }\n    }\n\n    return firebase;\n  } else if (url == \"us-central1-wl-test-2.cloudfunctions.net\") {\n    try {\n      var _config2 = {\n        aapiKey: process.env.FIREBASE_API_KEY_2,\n        authDomain: process.env.FIREBASE_AUTH_DOMAIN_2,\n        databaseURL: process.env.FIREBASE_DATABASE_URL_2,\n        projectId: process.env.FIREBASE_PROJECT_ID_2,\n        storageBucket: process.env.FIREBASE_STORAGE_BUCKET_2,\n        messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID_2,\n        appId: process.env.FIREBASE_APP_ID_2,\n        measurementId: process.env.FIREBASE_MEASUREMENT_ID_2\n      };\n      firebase.initializeApp(_config2);\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack);\n      }\n    }\n\n    return firebase;\n  } else {\n    try {\n      var _config3 = {\n        apiKey: process.env.FIREBASE_API_KEY_FUE,\n        authDomain: process.env.FIREBASE_AUTH_DOMAIN_FUE,\n        databaseURL: process.env.FIREBASE_DATABASE_URL_FUE,\n        projectId: process.env.FIREBASE_PROJECT_ID_FUE,\n        storageBucket: process.env.FIREBASE_STORAGE_BUCKET_FUE,\n        messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID_FUE,\n        appId: process.env.FIREBASE_APP_ID_FUE,\n        measurementId: process.env.FIREBASE_MEASUREMENT_ID_FUE\n      };\n      firebase.initializeApp(_config3);\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack);\n      }\n    }\n\n    return firebase;\n  }\n};\n\nexport default db;","map":null,"metadata":{},"sourceType":"module"}